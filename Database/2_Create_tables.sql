-- Creation of tables
CREATE TABLE BOOKSTORE.COUNTRY(
	-- Identity: La columna ser√° auto incrementable por defecto inicia en 1.
	ID_COUNTRY BIGINT PRIMARY KEY NOT NULL,
	NAME VARCHAR(400) NOT NULL UNIQUE
);

CREATE TABLE BOOKSTORE.CITY(
	ID_CITY BIGINT PRIMARY KEY NOT NULL,
	NAME VARCHAR(400) NOT NULL,
	ID_COUNTRY BIGINT NOT NULL FOREIGN KEY REFERENCES BOOKSTORE.COUNTRY(ID_COUNTRY)
);

CREATE TABLE BOOKSTORE.AUTHOR(
	ID_AUTHOR BIGINT PRIMARY KEY NOT NULL,
	NAMES VARCHAR(400) NOT NULL,
	SURNAMES VARCHAR(400) NOT NULL,
	BIRTH_YEAR BIGINT,
	DEATH_YEAR BIGINT,
	ID_COUNTRY BIGINT FOREIGN KEY REFERENCES BOOKSTORE.COUNTRY(ID_COUNTRY)
);

CREATE TABLE BOOKSTORE.CATEGORY(
	ID_CATEGORY BIGINT PRIMARY KEY NOT NULL,
	NAME VARCHAR(400) UNIQUE NOT NULL
);

CREATE TABLE BOOKSTORE.BOOK_AUTHOR(
	ID_BOOK BIGINT NOT NULL FOREIGN KEY REFERENCES BOOKSTORE.BOOK(ISBN),
	ID_AUTOR BIGINT NOT NULL FOREIGN KEY REFERENCES BOOKSTORE.AUTHOR(ID_AUTHOR)
);

CREATE TABLE BOOKSTORE.EDITORIAL(
	ID_EDITORIAL BIGINT PRIMARY KEY NOT NULL,
	NAME VARCHAR(400) UNIQUE NOT NULL,
	PHONE VARCHAR(30),
	EMAIL VARCHAR(150)
);

CREATE TABLE BOOKSTORE.EDITORIAL_LOCATION(
	ID_LOCATION BIGINT PRIMARY KEY NOT NULL,
	ADDRESS VARCHAR(400),
	PHONE VARCHAR(30),
	EMAIL VARCHAR(150),
	ID_CITY BIGINT FOREIGN KEY REFERENCES BOOKSTORE.CITY(ID_CITY),
	ID_EDITORIAL BIGINT FOREIGN KEY REFERENCES BOOKSTORE.EDITORIAL(ID_EDITORIAL)
);

CREATE TABLE BOOKSTORE.LANGUAGE(
	ID_LANGUAGE BIGINT PRIMARY KEY NOT NULL,
	NAME VARCHAR(150) UNIQUE
);

CREATE TABLE BOOKSTORE.BOOK(
	ISBN BIGINT PRIMARY KEY NOT NULL,
	TITLE VARCHAR(1000) NOT NULL,
	PAGES SMALLINT,
	EDITION VARCHAR(400),
	ID_LANGUAGE BIGINT FOREIGN KEY REFERENCES BOOKSTORE.LANGUAGE(ID_LANGUAGE),
	ID_EDITORIAL BIGINT FOREIGN KEY REFERENCES BOOKSTORE.EDITORIAL(ID_EDITORIAL),
	ID_CATEGORY BIGINT FOREIGN KEY REFERENCES BOOKSTORE.CATEGORY(ID_CATEGORY)
);

CREATE TABLE BOOKSTORE.PURCHASE_INVOICE(
	ID_PURCHASE_INVOICE BIGINT PRIMARY KEY NOT NULL,
	SHIPPING_DATE DATETIME2 NOT NULL,
	DELIVERY_DATE DATETIME2 NOT NULL,
	ID_EDITORIAL_LOCATION BIGINT FOREIGN KEY REFERENCES BOOKSTORE.EDITORIAL_LOCATION(ID_LOCATION)
);

CREATE TABLE BOOKSTORE.CLIENT_TYPE(
	ID_CLIENT_TYPE BIGINT PRIMARY KEY NOT NULL,
	NAME VARCHAR(400) NOT NULL UNIQUE
);

CREATE TABLE BOOKSTORE.CLIENT(
	ID_CLIENT BIGINT PRIMARY KEY NOT NULL,
	NAME VARCHAR(400) NOT NULL,
	SURNAMES VARCHAR(400) NOT NULL,
	PHONE VARCHAR(30),
	BIRTH_DATE DATE,
	ID_CLIENT_TYPE BIGINT FOREIGN KEY REFERENCES BOOKSTORE.CLIENT_TYPE(ID_CLIENT_TYPE)
);

CREATE TABLE BOOKSTORE.EMPLOYEE(
	ID_EMPLOYEE BIGINT PRIMARY KEY NOT NULL,
	NAMES VARCHAR(400) NOT NULL,
	SURNAMES VARCHAR(400) NOT NULL,
	BIRTH_DATE DATE NOT NULL,
	GENDER VARCHAR(6) NOT NULL,
	SALARY BIGINT NOT NULL,
	ID_CITY BIGINT FOREIGN KEY REFERENCES BOOKSTORE.CITY(ID_CITY)
);

CREATE TABLE BOOKSTORE.SALE_INVOICE(
	ID_SALE_INVOICE BIGINT PRIMARY KEY NOT NULL,
	SALE_DATE DATE,
	ID_EMPLOYEE BIGINT FOREIGN KEY REFERENCES BOOKSTORE.EMPLOYEE(ID_EMPLOYEE),
	ID_CLIENT BIGINT FOREIGN KEY REFERENCES BOOKSTORE.CLIENT(ID_CLIENT)
);

CREATE TABLE BOOKSTORE.BOOK_INVENTORY(
	ID_BOOK_INVENTORY BIGINT PRIMARY KEY NOT NULL,
	INVENTORY_STATUS VARCHAR(30) NOT NULL,
	PURCHASE_PRICE BIGINT NOT NULL,
	SALE_PRIVE BIGINT NOT NULL,
	ID_PURCHASE_INVOICE BIGINT FOREIGN KEY REFERENCES BOOKSTORE.PURCHASE_INVOICE(ID_PURCHASE_INVOICE),
	ID_BOOK BIGINT FOREIGN KEY REFERENCES BOOKSTORE.BOOK(ISBN)
);

CREATE TABLE BOOKSTORE.SALE_DETAIL(
	ID_SALE_DETAIL BIGINT PRIMARY KEY NOT NULL,
	ID_SALE_INVOICE BIGINT FOREIGN KEY REFERENCES BOOKSTORE.SALE_INVOICE(ID_SALE_INVOICE),
	ID_BOOK_INVENTORY BIGINT FOREIGN KEY REFERENCES BOOKSTORE.BOOK_INVENTORY(ID_BOOK_INVENTORY)
);

ALTER TABLE BOOKSTORE.EMPLOYEE ADD CONSTRAINT employee_check_genero CHECK (GENDER IN ('FEMALE', 'MALE'));
ALTER TABLE BOOKSTORE.BOOK_INVENTORY ADD CONSTRAINT book_inventory_check_status CHECK (INVENTORY_STATUS IN ('SOLD', 'IN STOCK'));